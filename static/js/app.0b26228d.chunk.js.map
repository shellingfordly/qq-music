{"version":3,"sources":["hooks/useColorScheme.ts","constants/Colors.ts","components/Themed.tsx","components/StyledText.tsx","components/EditScreenInfo.tsx","screens/ModalScreen.tsx","screens/NotFoundScreen.tsx","utils/http/errMessage.ts","utils/http/transform.ts","utils/http/checkStatus.ts","utils/http/index.ts","utils/http/axios.ts","server/api.ts","components/PlayList.tsx","store/modules/songList.ts","screens/home/hooks/useContext.ts","screens/home/components/RecommendPlayList.tsx","screens/home/components/RankPlayList/useFetch.ts","screens/home/components/RankPlayList/RankPlayList.tsx","screens/home/components/Search.tsx","screens/home/Home.tsx","screens/TabTwoScreen.tsx","screens/TabThreeScreen.tsx","navigation/LinkingConfiguration.ts","screens/song-page/SongPage.tsx","navigation/index.tsx","App.tsx","hooks/useCachedResources.ts","assets/fonts/SpaceMono-Regular.ttf","webpack:///./index.css?b6c2","index.css"],"names":["useColorScheme","_useColorScheme","light","text","background","tint","tabIconDefault","tabIconSelected","dark","useThemeColor","props","colorName","theme","colorFromProps","Colors","Text","style","lightColor","darkColor","otherProps","color","View","backgroundColor","MonoText","fontFamily","EditScreenInfo","path","styles","getStartedContainer","getStartedText","codeHighlightContainer","homeScreenFilename","helpContainer","TouchableOpacity","onPress","handleHelpPress","helpLink","helpLinkText","WebBrowser","StyleSheet","create","alignItems","marginHorizontal","marginVertical","borderRadius","paddingHorizontal","fontSize","lineHeight","textAlign","marginTop","paddingVertical","ModalScreen","container","title","separator","StatusBar","Platform","OS","flex","justifyContent","fontWeight","height","width","NotFoundScreen","navigation","replace","link","linkText","padding","ErrMsg","requestInterceptors","config","responseInterceptors","res","responseInterceptorsCatch","error","response","code","message","msg","data","err","toString","errMessage","indexOf","includes","Toast","show","content","position","Promise","reject","e","Error","status","checkStatus","opt","http","options","this","instance","axios","setupInterceptors","interceptors","request","use","undefined","createHttp","headers","defaults","url","method","resolve","then","result","transformRequestHook","catch","baseURL","timeout","ApiUrl","getPlayList","get","PlayList","itemTouchEnd","titleContainer","playContainer","playList","map","item","playItem","onTouchEnd","playImg","src","cover","cover_url_big","playNum","listen_num","access_num","toFixed","playTitle","tid","content_id","paddingTop","paddingBottom","flexDirection","overflow","marginRight","bottom","right","songStore","theSongListInfo","isSearchPage","makeAutoObservable","bool","SearchContext","React","createContext","isShowSearch","setIsShowSearch","RecommendPlayList","useState","playListData","setPlayListData","store","useLocalStore","useNavigation","useContext","a","async","params","id","song","setTheSongListInfo","isRank","imgUrl","textOne","textTwo","nickname","textThree","textTotal","songnum","list","songlist","v","albumid","songname","singerName","singer","reduce","p","n","name","navigate","useEffect","all","shape","onClick","SearchOutline","useFetch","allRankList","setAllRankList","recommendRanckList","setRecommendRanckList","topRanckMap","setTopRanckMap","getTopRankPlayListDetails","index","topId","oldData","length","local","localStorage","getItem","JSON","parse","setItem","stringify","allData","concat","filter","RankPlayList","ScrollView","Object","values","picUrl","label","info","titleDetail","update","total","desc","slice","songTitle","itemBox","top","left","listenNum","currentHeight","marginBottom","Search","hotWords","setHotWords","songs","setSongs","searchKey","setSearchKey","isShowHotSearch","setIsShowHotSearch","searchHistory","setSearchHistore","getSearchHistory","console","log","onSearch","value","history","unshift","Set","key","searchBox","onChange","onClear","placeholder","setTimeout","cancelText","hotSearch","DeleteOutline","removeItem","hostWords","word","i","k","songid","Tab","marginLeft","fonSize","flexWrap","paddingLeft","paddingRight","observer","Recommend","activeKey","setActiveKey","process","boxShadow","zIndex","Rank","Provider","display","TabTwoScreen","linking","prefixes","Linking","screens","Root","Home","TabTwo","TabThree","TabThreeScreen","Modal","NotFound","SongPage","route","infoBox","imgBox","playBtn","PlayOutline","songList","listTitle","songBox","songIndex","margin","textShadowColor","shadowRadius","shadowOpacity","shadowOffset","rankValue","Navigation","colorScheme","NavigationContainer","LinkingConfiguration","DarkTheme","DefaultTheme","RootNavigator","Stack","createNativeStackNavigator","Navigator","Screen","component","BottomTabNavigator","headerShown","Group","screenOptions","presentation","BottomTab","createBottomTabNavigator","initialRouteName","tabBarActiveTintColor","tabBarIcon","TabBarIcon","FontAwesome","size","App","isLoadingComplete","setLoadingComplete","SplashScreen","Font","font","require","warn","useCachedResources","module","exports","api","__esModule","default","locals","___CSS_LOADER_API_IMPORT___","push"],"mappings":"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","file":"static/js/app.0b26228d.chunk.js","sourcesContent":["import { ColorSchemeName, useColorScheme as _useColorScheme } from 'react-native';\r\n\r\n// The useColorScheme value is always either light or dark, but the built-in\r\n// type suggests that it can be null. This will not happen in practice, so this\r\n// makes it a bit easier to work with.\r\nexport default function useColorScheme(): NonNullable<ColorSchemeName> {\r\n  return _useColorScheme() as NonNullable<ColorSchemeName>;\r\n}\r\n","const tintColorLight = '#2f95dc';\r\nconst tintColorDark = '#fff';\r\n\r\nexport default {\r\n  light: {\r\n    text: '#000',\r\n    background: '#fff',\r\n    tint: tintColorLight,\r\n    tabIconDefault: '#ccc',\r\n    tabIconSelected: tintColorLight,\r\n  },\r\n  dark: {\r\n    text: '#fff',\r\n    background: '#000',\r\n    tint: tintColorDark,\r\n    tabIconDefault: '#ccc',\r\n    tabIconSelected: tintColorDark,\r\n  },\r\n};\r\n","/**\r\n * Learn more about Light and Dark modes:\r\n * https://docs.expo.io/guides/color-schemes/\r\n */\r\n\r\nimport { Text as DefaultText, View as DefaultView } from 'react-native';\r\n\r\nimport Colors from '../constants/Colors';\r\nimport useColorScheme from '../hooks/useColorScheme';\r\n\r\nexport function useThemeColor(\r\n  props: { light?: string; dark?: string },\r\n  colorName: keyof typeof Colors.light & keyof typeof Colors.dark\r\n) {\r\n  const theme = useColorScheme();\r\n  const colorFromProps = props[theme];\r\n\r\n  if (colorFromProps) {\r\n    return colorFromProps;\r\n  } else {\r\n    return Colors[theme][colorName];\r\n  }\r\n}\r\n\r\ntype ThemeProps = {\r\n  lightColor?: string;\r\n  darkColor?: string;\r\n};\r\n\r\nexport type TextProps = ThemeProps & DefaultText['props'];\r\nexport type ViewProps = ThemeProps & DefaultView['props'];\r\n\r\nexport function Text(props: TextProps) {\r\n  const { style, lightColor, darkColor, ...otherProps } = props;\r\n  const color = useThemeColor({ light: lightColor, dark: darkColor }, 'text');\r\n\r\n  return <DefaultText style={[{ color }, style]} {...otherProps} />;\r\n}\r\n\r\nexport function View(props: ViewProps) {\r\n  const { style, lightColor, darkColor, ...otherProps } = props;\r\n  const backgroundColor = useThemeColor({ light: lightColor, dark: darkColor }, 'background');\r\n\r\n  return <DefaultView style={[{ backgroundColor }, style]} {...otherProps} />;\r\n}\r\n","import { Text, TextProps } from './Themed';\r\n\r\nexport function MonoText(props: TextProps) {\r\n  return <Text {...props} style={[props.style, { fontFamily: 'space-mono' }]} />;\r\n}\r\n","import * as WebBrowser from 'expo-web-browser';\r\nimport { StyleSheet, TouchableOpacity } from 'react-native';\r\n\r\nimport Colors from '../constants/Colors';\r\nimport { MonoText } from './StyledText';\r\nimport { Text, View } from './Themed';\r\n\r\nexport default function EditScreenInfo({ path }: { path: string }) {\r\n  return (\r\n    <View>\r\n      <View style={styles.getStartedContainer}>\r\n        <Text\r\n          style={styles.getStartedText}\r\n          lightColor=\"rgba(0,0,0,0.8)\"\r\n          darkColor=\"rgba(255,255,255,0.8)\">\r\n          Open up the code for this screen:\r\n        </Text>\r\n\r\n        <View\r\n          style={[styles.codeHighlightContainer, styles.homeScreenFilename]}\r\n          darkColor=\"rgba(255,255,255,0.05)\"\r\n          lightColor=\"rgba(0,0,0,0.05)\">\r\n          <MonoText>{path}</MonoText>\r\n        </View>\r\n\r\n        <Text\r\n          style={styles.getStartedText}\r\n          lightColor=\"rgba(0,0,0,0.8)\"\r\n          darkColor=\"rgba(255,255,255,0.8)\">\r\n          Change any of the text, save the file, and your app will automatically update.\r\n        </Text>\r\n      </View>\r\n\r\n      <View style={styles.helpContainer}>\r\n        <TouchableOpacity onPress={handleHelpPress} style={styles.helpLink}>\r\n          <Text style={styles.helpLinkText} lightColor={Colors.light.tint}>\r\n            Tap here if your app doesn't automatically update after making changes\r\n          </Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nfunction handleHelpPress() {\r\n  WebBrowser.openBrowserAsync(\r\n    'https://docs.expo.io/get-started/create-a-new-app/#opening-the-app-on-your-phonetablet'\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  getStartedContainer: {\r\n    alignItems: 'center',\r\n    marginHorizontal: 50,\r\n  },\r\n  homeScreenFilename: {\r\n    marginVertical: 7,\r\n  },\r\n  codeHighlightContainer: {\r\n    borderRadius: 3,\r\n    paddingHorizontal: 4,\r\n  },\r\n  getStartedText: {\r\n    fontSize: 17,\r\n    lineHeight: 24,\r\n    textAlign: 'center',\r\n  },\r\n  helpContainer: {\r\n    marginTop: 15,\r\n    marginHorizontal: 20,\r\n    alignItems: 'center',\r\n  },\r\n  helpLink: {\r\n    paddingVertical: 15,\r\n  },\r\n  helpLinkText: {\r\n    textAlign: 'center',\r\n  },\r\n});\r\n","import { StatusBar } from 'expo-status-bar';\r\nimport { Platform, StyleSheet } from 'react-native';\r\n\r\nimport EditScreenInfo from '../components/EditScreenInfo';\r\nimport { Text, View } from '../components/Themed';\r\n\r\nexport default function ModalScreen() {\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>Modal</Text>\r\n      <View style={styles.separator} lightColor=\"#eee\" darkColor=\"rgba(255,255,255,0.1)\" />\r\n      <EditScreenInfo path=\"/screens/ModalScreen.tsx\" />\r\n\r\n      {/* Use a light status bar on iOS to account for the black space above the modal */}\r\n      <StatusBar style={Platform.OS === 'ios' ? 'light' : 'auto'} />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  title: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n  },\r\n  separator: {\r\n    marginVertical: 30,\r\n    height: 1,\r\n    width: '80%',\r\n  },\r\n});\r\n","import { StyleSheet, TouchableOpacity } from 'react-native';\r\n\r\nimport { Text, View } from '../components/Themed';\r\nimport { RootStackScreenProps } from '../types';\r\n\r\nexport default function NotFoundScreen({ navigation }: RootStackScreenProps<'NotFound'>) {\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>This screen doesn't exist.</Text>\r\n      <TouchableOpacity onPress={() => navigation.replace('Root')} style={styles.link}>\r\n        <Text style={styles.linkText}>Go to home screen!</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n  },\r\n  link: {\r\n    marginTop: 15,\r\n    paddingVertical: 15,\r\n  },\r\n  linkText: {\r\n    fontSize: 14,\r\n    color: '#2e78b7',\r\n  },\r\n});\r\n","export const ErrMsg = {\r\n  401: \"用户没有权限（令牌、用户名、密码错误）!\",\r\n  403: \"用户得到授权，但是访问是被禁止的。!\",\r\n  404: \"网络请求错误,未找到该资源!\",\r\n  405: \"网络请求错误,请求方法未允许!\",\r\n  408: \"网络请求超时!\",\r\n  500: \"服务器错误,请联系管理员!\",\r\n  501: \"网络未实现!\",\r\n  502: \"网络错误!\",\r\n  503: \"服务不可用，服务器暂时过载或维护!\",\r\n  504: \"网络超时!\",\r\n  505: \"http版本不支持该请求!\",\r\n  operationFailed: \"操作失败\",\r\n  errorTip: \"错误提示\",\r\n  errorMessage: \"操作失败,系统异常!\",\r\n  timeoutMessage: \"登录超时,请重新登录!\",\r\n  apiTimeoutMessage: \"接口请求超时,请刷新页面重试!\",\r\n  apiRequestFailed: \"请求出错，请稍候重试\",\r\n  networkException: \"网络异常\",\r\n  networkExceptionMsg: \"网络异常，请检查您的网络连接是否正常!\",\r\n};\r\n","import { AxiosRequestConfig, AxiosResponse } from \"axios\";\r\nimport { checkStatus } from \"./checkStatus\";\r\nimport { ErrMsg } from \"./errMessage\";\r\nimport { Toast } from \"antd-mobile\";\r\n\r\n// 返回值处理\r\nexport function transformRequestHook(res: AxiosResponse) {\r\n  return res.data;\r\n}\r\n\r\n// 请求拦截处理\r\nexport function requestInterceptors(config: AxiosRequestConfig) {\r\n  return config;\r\n}\r\n\r\n// 响应正常处理\r\nexport function responseInterceptors(res: AxiosResponse) {\r\n  return res;\r\n}\r\n\r\n// 响应错误处理\r\nexport function responseInterceptorsCatch(error: any) {\r\n  const { response, code, message } = error || {};\r\n  const msg: string = response?.data?.title ?? \"\";\r\n  const err: string = error?.toString?.() ?? \"\";\r\n  let errMessage = \"\";\r\n  try {\r\n    if (code === \"ECONNABORTED\" && message.indexOf(\"timeout\") !== -1) {\r\n      errMessage = ErrMsg.apiTimeoutMessage;\r\n    }\r\n    if (err?.includes(\"Network Error\")) {\r\n      errMessage = ErrMsg.networkExceptionMsg;\r\n    }\r\n\r\n    if (errMessage) {\r\n      Toast.show({\r\n        content: errMessage,\r\n        position: \"top\",\r\n      });\r\n      return Promise.reject(error);\r\n    }\r\n  } catch (e) {\r\n    throw new Error(e as string);\r\n  }\r\n  checkStatus(error?.response?.status, msg);\r\n  return Promise.reject(error);\r\n}\r\n","import { ErrMsg } from \"./errMessage\";\r\nimport { Toast } from \"antd-mobile\";\r\n\r\nexport function checkStatus(status: number, msg: string) {\r\n  let errMessage = \"\";\r\n\r\n  switch (status) {\r\n    case 400:\r\n      errMessage = msg;\r\n      break;\r\n    case 401:\r\n      errMessage = ErrMsg[\"401\"];\r\n      break;\r\n    case 403:\r\n      errMessage = ErrMsg[\"403\"];\r\n      break;\r\n    case 404:\r\n      errMessage = ErrMsg[\"404\"];\r\n      break;\r\n    case 405:\r\n      errMessage = ErrMsg[\"405\"];\r\n      break;\r\n    case 408:\r\n      errMessage = ErrMsg[\"408\"];\r\n      break;\r\n    case 500:\r\n      errMessage = ErrMsg[\"500\"];\r\n      break;\r\n    case 501:\r\n      errMessage = ErrMsg[\"501\"];\r\n      break;\r\n    case 502:\r\n      errMessage = ErrMsg[\"502\"];\r\n      break;\r\n    case 503:\r\n      errMessage = ErrMsg[\"503\"];\r\n      break;\r\n    case 504:\r\n      errMessage = ErrMsg[\"504\"];\r\n      break;\r\n    case 505:\r\n      errMessage = ErrMsg[\"505\"];\r\n      break;\r\n    default:\r\n  }\r\n  if (errMessage) {\r\n    Toast.show({\r\n      content: errMessage,\r\n      position: \"top\",\r\n    });\r\n  }\r\n}\r\n","import type { AxiosRequestConfig } from \"axios\";\r\nimport { Http } from \"./axios\";\r\n\r\nfunction createHttp(opt?: Partial<AxiosRequestConfig>) {\r\n  const isDev = process.env.NODE_ENV === \"development\";\r\n  return new Http({\r\n    baseURL: isDev ? \"http://localhost:3300/\" : \"/\",\r\n    timeout: 3000,\r\n    ...opt,\r\n  });\r\n}\r\n\r\nexport const http = createHttp();\r\n","import axios, {\r\n  AxiosInstance,\r\n  AxiosRequestConfig,\r\n  AxiosRequestHeaders,\r\n} from \"axios\";\r\nimport {\r\n  transformRequestHook,\r\n  requestInterceptors,\r\n  responseInterceptors,\r\n  responseInterceptorsCatch,\r\n} from \"./transform\";\r\n\r\nexport class Http {\r\n  private instance: AxiosInstance;\r\n\r\n  constructor(options: AxiosRequestConfig) {\r\n    this.instance = axios.create(options);\r\n    this.setupInterceptors();\r\n  }\r\n\r\n  private createHttp(config: AxiosRequestConfig): void {\r\n    this.instance = axios.create(config);\r\n  }\r\n\r\n  private setupInterceptors() {\r\n    // 请求拦截处理\r\n    this.instance.interceptors.request.use(requestInterceptors, undefined);\r\n    this.instance.interceptors.request.use(undefined, () => {});\r\n    // 响应拦截处理\r\n    this.instance.interceptors.response.use(responseInterceptors, undefined);\r\n    this.instance.interceptors.response.use(\r\n      undefined,\r\n      responseInterceptorsCatch\r\n    );\r\n  }\r\n\r\n  getHttp(): AxiosInstance {\r\n    return this.instance;\r\n  }\r\n\r\n  configHttp(config: AxiosRequestConfig) {\r\n    if (!this.instance) {\r\n      return;\r\n    }\r\n    this.createHttp(config);\r\n  }\r\n\r\n  setHeader(headers: AxiosRequestHeaders): void {\r\n    if (!this.instance) {\r\n      return;\r\n    }\r\n\r\n    Object.assign(this.instance.defaults.headers, headers);\r\n  }\r\n\r\n  get(url: string) {\r\n    return this.request({\r\n      url,\r\n      method: \"GET\",\r\n    });\r\n  }\r\n\r\n  request<T>(config: AxiosRequestConfig): Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n      this.instance\r\n        .request(config)\r\n        .then((result) => {\r\n          const res = transformRequestHook(result);\r\n          resolve(res);\r\n        })\r\n        .catch((err) => {\r\n          reject(err);\r\n        });\r\n    });\r\n  }\r\n}\r\n","import { http } from \"../utils/http\";\r\n\r\nexport const ApiUrl = {\r\n  // 为你推荐歌单\r\n  ForYouRecommend: \"/recommend/playlist/u\",\r\n  // 按分类推荐歌单\r\n  CategoryRecommend: \"/recommend/playlist\",\r\n  // 日推\r\n  DailyRecommend: \"/recommend/daily\",\r\n  // 获取榜单列表\r\n  TopCategory: \"/top/category\",\r\n  // 获取热搜词\r\n  HotSearch: \"/search/hot\",\r\n};\r\n\r\nexport function getPlayList(url: string) {\r\n  return http.get(url);\r\n}\r\n\r\n/**\r\n * @description 获取榜单详情\r\n * @param key\r\n */\r\nexport function searchSong(params: { key: string }) {\r\n  return http.request({\r\n    url: \"/search\",\r\n    method: \"GET\",\r\n    params,\r\n  });\r\n}\r\n\r\n/**\r\n * @description 获取榜单详情\r\n * @param id 默认 4\r\n */\r\nexport function topDetails(params: { id: number }) {\r\n  return http.request({\r\n    url: \"/top\",\r\n    method: \"GET\",\r\n    params,\r\n  });\r\n}\r\n\r\n/**\r\n * @description 获取榜单详情\r\n * @param id 默认 4\r\n */\r\nexport function getSongListDetails(params: { id: number }) {\r\n  return http.request({\r\n    url: \"/songlist\",\r\n    method: \"GET\",\r\n    params,\r\n  });\r\n}\r\n","import { StyleSheet } from \"react-native\";\r\nimport { Text, View } from \"../components/Themed\";\r\nimport { Image } from \"antd-mobile\";\r\n\r\nexport interface PlayListProps {\r\n  title: string;\r\n  playList: any[];\r\n}\r\n\r\nexport default function PlayList({\r\n  data,\r\n  itemTouchEnd,\r\n}: {\r\n  data: PlayListProps;\r\n  itemTouchEnd?: (item: any) => void;\r\n}) {\r\n  function onTouchEnd(item: any) {\r\n    itemTouchEnd && itemTouchEnd(item);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <View style={styles.titleContainer}>\r\n        <Text style={styles.title}>{data.title}</Text>\r\n      </View>\r\n      <View style={styles.playContainer}>\r\n        {data.playList.map((item) => (\r\n          <View\r\n            style={styles.playItem}\r\n            key={item.tid || item.content_id}\r\n            onTouchEnd={() => onTouchEnd(item)}\r\n          >\r\n            <View style={styles.playImg}>\r\n              <Image\r\n                src={item.cover || item.cover_url_big}\r\n                width={100}\r\n                height={100}\r\n                style={{ borderRadius: 10 }}\r\n              />\r\n              <Text style={styles.playNum}>\r\n                {((item.listen_num || item.access_num) / 10000).toFixed(1)}万\r\n              </Text>\r\n            </View>\r\n            <Text style={styles.playTitle}>{item.title}</Text>\r\n          </View>\r\n        ))}\r\n      </View>\r\n    </>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  titleContainer: {\r\n    paddingTop: 10,\r\n    paddingBottom: 10,\r\n    fontSize: 18,\r\n  },\r\n  title: {\r\n    fontSize: 18,\r\n    fontWeight: \"600\",\r\n  },\r\n  playContainer: {\r\n    flexDirection: \"row\",\r\n    overflow: \"scroll\",\r\n    paddingBottom: 3,\r\n  },\r\n  playItem: {\r\n    width: 100,\r\n    overflow: \"hidden\",\r\n    marginRight: 10,\r\n  },\r\n  playImg: {\r\n    position: \"relative\",\r\n  },\r\n  playNum: {\r\n    position: \"absolute\",\r\n    bottom: 5,\r\n    right: 5,\r\n    color: \"white\",\r\n  },\r\n  playTitle: {\r\n    fontSize: 12,\r\n    color: \"#666\",\r\n    lineHeight: 20,\r\n    marginTop: 5,\r\n  },\r\n});\r\n","import { makeAutoObservable } from \"mobx\"\r\n\r\n\r\nclass SongListStore {\r\n  theSongListInfo: any = {}\r\n  isSearchPage = false\r\n\r\n  constructor() {\r\n    makeAutoObservable(this)\r\n  }\r\n\r\n  setTheSongListInfo(data: any) {\r\n    this.theSongListInfo = data\r\n  }\r\n\r\n  changeSearchPage(bool: boolean) {\r\n    this.isSearchPage = bool\r\n  }\r\n}\r\n\r\nexport const songStore = new SongListStore()","import React, { Dispatch, SetStateAction } from \"react\";\r\n\r\nconst values: {\r\n  isShowSearch: boolean;\r\n  setIsShowSearch: Dispatch<SetStateAction<boolean>>;\r\n} = {\r\n  isShowSearch: false,\r\n  setIsShowSearch() {},\r\n};\r\n\r\nexport const SearchContext = React.createContext(values);\r\n","import { useContext, useEffect, useState } from \"react\";\r\nimport { ApiUrl, getPlayList, getSongListDetails } from \"../../../server/api\";\r\nimport PlayList from \"../../../components/PlayList\";\r\nimport type { PlayListProps } from \"../../../components/PlayList\";\r\nimport { Button, Space } from \"antd-mobile\";\r\nimport { SearchOutline } from \"antd-mobile-icons\";\r\nimport { useLocalStore } from \"mobx-react\";\r\nimport { songStore } from \"../../../store/modules/songList\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { View } from \"react-native\";\r\nimport { SearchContext } from \"../hooks/useContext\";\r\n\r\nexport default function RecommendPlayList({}) {\r\n  const [playListData, setPlayListData] = useState<PlayListProps[]>([]);\r\n  const store = useLocalStore(() => songStore);\r\n  const navigation = useNavigation();\r\n\r\n  const { setIsShowSearch } = useContext(SearchContext);\r\n\r\n  useEffect(() => {\r\n    Promise.all([\r\n      getPlayList(ApiUrl.CategoryRecommend),\r\n      getPlayList(ApiUrl.ForYouRecommend),\r\n    ]).then((res) => {\r\n      setPlayListData([\r\n        {\r\n          title: \"官方歌单\",\r\n          playList: res[0].data.list,\r\n        },\r\n        {\r\n          title: \"达人歌单\",\r\n          playList: res[1].data.list,\r\n        },\r\n      ]);\r\n    });\r\n  }, []);\r\n\r\n  async function itemTouchEnd(item: any) {\r\n    try {\r\n      const { data: song } = await getSongListDetails({\r\n        id: item.content_id || item.tid,\r\n      });\r\n      store.setTheSongListInfo({\r\n        ...item,\r\n        isRank: false,\r\n        imgUrl: item.cover || item.cover_url_big,\r\n        textOne: item.title,\r\n        textTwo: song.nickname,\r\n        textThree: `播放量：${item.listen_num || item.access_num}`,\r\n        textTotal: `歌单 共${song.songnum}首`,\r\n        list: song.songlist.map((v: any) => ({\r\n          id: v.albumid,\r\n          title: v.songname,\r\n          singerName: v.singer.reduce((p: any, n: any) => p + n.name + \" \", \"\"),\r\n        })),\r\n      });\r\n      navigation.navigate(\"SongPage\");\r\n    } catch (error) {}\r\n  }\r\n\r\n  function goSearch() {\r\n    setIsShowSearch(true);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <View\r\n        style={{\r\n          padding: 20,\r\n        }}\r\n      >\r\n        <Button shape=\"rounded\" onClick={goSearch}>\r\n          <Space>\r\n            <SearchOutline />\r\n            <span>搜索</span>\r\n          </Space>\r\n        </Button>\r\n      </View>\r\n      <View\r\n        style={{\r\n          padding: 20,\r\n          backgroundColor: \"#fff\",\r\n          height: \"100%\",\r\n        }}\r\n      >\r\n        {playListData.map((data) => (\r\n          <PlayList key={data.title} data={data} itemTouchEnd={itemTouchEnd} />\r\n        ))}\r\n      </View>\r\n    </>\r\n  );\r\n}\r\n","import { ApiUrl, getPlayList, topDetails } from \"../../../../server/api\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nexport function useFetch() {\r\n  const [allRankList, setAllRankList] = useState<any[]>([]);\r\n  const [recommendRanckList, setRecommendRanckList] = useState<any[]>([]);\r\n  const [topRanckMap, setTopRanckMap] = useState<Record<number, any>>([]);\r\n\r\n  function getTopRankPlayListDetails(data: any[]) {\r\n    const map: Record<number, any> = {}\r\n    for (let index = 0; index < data.length; index++) {\r\n      const id = data[index].topId;\r\n      if (id === 201) continue;\r\n      map[id] = data[index]\r\n      topDetails({ id }).then((res) => {\r\n        setTopRanckMap((oldData) => ({\r\n          ...oldData,\r\n          [id]: {\r\n            ...map[id],\r\n            ...res.data\r\n          }\r\n        }));\r\n      });\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      let local = localStorage.getItem(\"RankList\");\r\n      let res;\r\n      if (local) {\r\n        res = JSON.parse(local);\r\n      } else {\r\n        const res = await getPlayList(ApiUrl.TopCategory);\r\n        localStorage.setItem(\"RankList\", JSON.stringify(res));\r\n      }\r\n\r\n      const allData = res.data.reduce((p: any, n: any) => {\r\n        return p.concat(n.list);\r\n      }, []);\r\n      setAllRankList(allData);\r\n      setRecommendRanckList(\r\n        allData.filter((item: any) => [60, 67, 63].includes(item.topId))\r\n      );\r\n      getTopRankPlayListDetails(res.data[0].list);\r\n    })();\r\n  }, []);\r\n\r\n  return {\r\n    allRankList,\r\n    recommendRanckList,\r\n    topRanckMap,\r\n  };\r\n}\r\n","import { StyleSheet, ScrollView, StatusBar } from \"react-native\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { useFetch } from \"./useFetch\";\r\nimport { useLocalStore } from \"mobx-react\";\r\nimport { View, Text } from \"../../../../components/Themed\";\r\nimport { songStore } from \"../../../../store/modules/songList\";\r\n\r\nexport default function RankPlayList() {\r\n  const navigation = useNavigation();\r\n  const { topRanckMap } = useFetch();\r\n  const store = useLocalStore(() => songStore);\r\n\r\n  function onTouchEnd(song: any) {\r\n    store.setTheSongListInfo({\r\n      ...song,\r\n      isRank: true,\r\n      imgUrl: song.picUrl,\r\n      textOne: song.label,\r\n      textTwo: song.info.titleDetail,\r\n      textThree: `更新时间：${song.update}`,\r\n      textTotal: `排行榜 共${song.total}首`,\r\n    });\r\n    navigation.navigate(\"SongPage\");\r\n  }\r\n\r\n  return (\r\n    <ScrollView style={styles.container}>\r\n      {Object.values(topRanckMap).map((item) => (\r\n        <View\r\n          style={styles.item}\r\n          key={item.id}\r\n          onTouchEnd={() => onTouchEnd(item)}\r\n        >\r\n          <View style={styles.desc}>\r\n            <Text style={styles.label}>{item.label}</Text>\r\n            {item.list &&\r\n              item.list.slice(0, 3).map((song: any, index: number) => (\r\n                <View style={styles.song} key={song.id}>\r\n                  <Text style={styles.index}>{index + 1}.</Text>\r\n                  <Text style={styles.songTitle}>{song.title}-</Text>\r\n                  <Text style={styles.singerName}>{song.singerName}</Text>\r\n                </View>\r\n              ))}\r\n          </View>\r\n          <View style={styles.itemBox}>\r\n            <img\r\n              src={item.picUrl}\r\n              width={180}\r\n              style={{\r\n                position: \"absolute\",\r\n                top: -40,\r\n                left: -40,\r\n              }}\r\n            />\r\n            <Text style={styles.listenNum}>\r\n              {(item.listenNum / 10000).toFixed(1)}万\r\n            </Text>\r\n          </View>\r\n        </View>\r\n      ))}\r\n    </ScrollView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    paddingTop: StatusBar.currentHeight,\r\n    overflow: \"scroll\",\r\n    padding: 20,\r\n  },\r\n  item: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    borderRadius: 10,\r\n    overflow: \"hidden\",\r\n    marginBottom: 10,\r\n  },\r\n  desc: {\r\n    padding: 10,\r\n  },\r\n  itemBox: {\r\n    position: \"relative\",\r\n    width: 100,\r\n    overflow: \"hidden\",\r\n  },\r\n  listenNum: {\r\n    position: \"absolute\",\r\n    bottom: 5,\r\n    right: 5,\r\n    color: \"white\",\r\n  },\r\n  label: {\r\n    fontSize: 16,\r\n    fontWeight: \"600\",\r\n  },\r\n  song: {\r\n    flexDirection: \"row\",\r\n    marginTop: 5,\r\n  },\r\n  index: {\r\n    fontWeight: \"600\",\r\n    fontSize: 12,\r\n  },\r\n  songTitle: {\r\n    fontSize: 12,\r\n  },\r\n\r\n  singerName: {\r\n    color: \"#999\",\r\n    fontSize: 12,\r\n  },\r\n});\r\n","import { View, Text, StyleSheet, ScrollView } from \"react-native\";\r\nimport { SearchBar } from \"antd-mobile\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { SearchContext } from \"../hooks/useContext\";\r\nimport { ApiUrl, getPlayList, searchSong } from \"../../../server/api\";\r\nimport { DeleteOutline } from \"antd-mobile-icons\";\r\n\r\nexport default function Search() {\r\n  const { setIsShowSearch } = useContext(SearchContext);\r\n  const [hotWords, setHotWords] = useState<{ k: string; n: number }[]>([]);\r\n  const [songs, setSongs] = useState<any[]>([]);\r\n  const [searchKey, setSearchKey] = useState(\"\");\r\n  const [isShowHotSearch, setIsShowHotSearch] = useState(true);\r\n  const [searchHistory, setSearchHistore] = useState<string[]>([]);\r\n\r\n  function getSearchHistory(): any[] {\r\n    const data = localStorage.getItem(\"SearchHistory\");\r\n    console.log(data);\r\n\r\n    if (data) {\r\n      return JSON.parse(data);\r\n    }\r\n    return [];\r\n  }\r\n\r\n  useEffect(() => {\r\n    try {\r\n      getPlayList(ApiUrl.HotSearch).then((res) => {\r\n        setHotWords(res.data);\r\n      });\r\n    } catch (error) {}\r\n    setSearchHistore(getSearchHistory());\r\n  }, []);\r\n\r\n  function onTouchEnd() {\r\n    setTimeout(() => {\r\n      // 显示热门搜索\r\n      setIsShowHotSearch(true);\r\n      setSearchKey(\"\");\r\n      // 隐藏搜索组件\r\n      setIsShowSearch(false);\r\n    });\r\n  }\r\n\r\n  function onClear() {\r\n    setSearchKey(\"\");\r\n    setIsShowHotSearch(true);\r\n  }\r\n\r\n  function onDeleteHistory() {\r\n    localStorage.removeItem(\"SearchHistory\");\r\n    setSearchHistore([]);\r\n  }\r\n\r\n  async function onSearch(value: string) {\r\n    setSearchKey(value);\r\n    setIsShowHotSearch(!value);\r\n    if (value) {\r\n      const history = getSearchHistory();\r\n      history.unshift(value);\r\n      const data: any[] = [...new Set(history)];\r\n      localStorage.setItem(\"SearchHistory\", JSON.stringify(data));\r\n      setSearchHistore(data);\r\n    }\r\n    try {\r\n      const res = await searchSong({\r\n        key: value,\r\n      });\r\n      setSongs(res.data.list);\r\n    } catch (error) {}\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <View style={styles.searchBox}>\r\n        <SearchBar\r\n          value={searchKey}\r\n          onChange={(key) => setSearchKey(key)}\r\n          onSearch={onSearch}\r\n          onClear={onClear}\r\n          placeholder=\"请输入内容\"\r\n          style={{\r\n            \"--border-radius\": \"100px\",\r\n            \"--background\": \"#fff\",\r\n            width: \"85%\",\r\n          }}\r\n        />\r\n        <View onTouchEnd={onTouchEnd}>\r\n          <Text style={styles.cancelText}>取消</Text>\r\n        </View>\r\n      </View>\r\n      <ScrollView style={styles.hotSearch}>\r\n        {!!searchHistory.length && isShowHotSearch && (\r\n          <>\r\n            <View\r\n              style={{\r\n                height: 30,\r\n                flexDirection: \"row\",\r\n                justifyContent: \"space-between\",\r\n                alignItems: \"center\",\r\n                marginBottom: 15,\r\n              }}\r\n            >\r\n              <Text style={[styles.title, { marginBottom: 0 }]}>搜索历史</Text>\r\n              <DeleteOutline onTouchEnd={onDeleteHistory} />\r\n            </View>\r\n            <View style={styles.hostWords}>\r\n              {searchHistory.map((word, i) => (\r\n                <View key={i} onTouchEnd={() => onSearch(word)}>\r\n                  <Text style={styles.word}>{word}</Text>\r\n                </View>\r\n              ))}\r\n            </View>\r\n          </>\r\n        )}\r\n        {isShowHotSearch && (\r\n          <>\r\n            <Text style={styles.title}>热门搜索</Text>\r\n            <View style={styles.hostWords}>\r\n              {hotWords.map((item) => (\r\n                <View key={item.n} onTouchEnd={() => onSearch(item.k)}>\r\n                  <Text style={styles.word}>{item.k}</Text>\r\n                </View>\r\n              ))}\r\n            </View>\r\n          </>\r\n        )}\r\n        {!isShowHotSearch && (\r\n          <View style={styles.songs}>\r\n            {songs.map((item) => (\r\n              <View key={item.songid}>\r\n                <Text style={styles.songname}>{item.songname}</Text>\r\n                <Text style={styles.singer}>\r\n                  {item.singer.reduce((p: any, n: any) => p + n.name + \" \", \"\")}\r\n                </Text>\r\n              </View>\r\n            ))}\r\n          </View>\r\n        )}\r\n      </ScrollView>\r\n    </>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  searchBox: {\r\n    padding: 20,\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  cancelText: {\r\n    marginLeft: 10,\r\n    fontSize: 16,\r\n    lineHeight: 30,\r\n  },\r\n  hotSearch: {\r\n    padding: 20,\r\n    paddingTop: 0,\r\n  },\r\n  title: {\r\n    fonSize: 14,\r\n    fontWeight: \"700\",\r\n    marginBottom: 15,\r\n  },\r\n  hostWords: {\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n    marginBottom: 15,\r\n  },\r\n  word: {\r\n    backgroundColor: \"white\",\r\n    borderRadius: 100,\r\n    paddingTop: 2,\r\n    paddingBottom: 2,\r\n    paddingLeft: 8,\r\n    paddingRight: 8,\r\n    marginRight: 10,\r\n    marginBottom: 10,\r\n    color: \"#666\",\r\n    fontWeight: \"300\",\r\n  },\r\n  songs: {\r\n    paddingLeft: 10,\r\n  },\r\n  songname: {\r\n    fontSize: 16,\r\n    fontWeight: \"400\",\r\n    marginBottom: 2,\r\n  },\r\n  singer: {\r\n    fontSize: 10,\r\n    color: \"#999\",\r\n    marginBottom: 10,\r\n  },\r\n});\r\n","import { Tabs } from \"antd-mobile\";\r\nimport RecommendPlayList from \"./components/RecommendPlayList\";\r\nimport RankPlayList from \"./components/RankPlayList/RankPlayList\";\r\nimport Search from \"./components/Search\";\r\nimport { ScrollView, View } from \"react-native\";\r\nimport { useState } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { SearchContext } from \"./hooks/useContext\";\r\n\r\nenum Tab {\r\n  Recommend = \"RecommendPlayList\",\r\n  Rank = \"RankPlayList\",\r\n}\r\n\r\nfunction Home() {\r\n  const [activeKey, setActiveKey] = useState<Tab>(Tab.Recommend);\r\n  const [isShowSearch, setIsShowSearch] = useState(false);\r\n  const value = { isShowSearch, setIsShowSearch };\r\n  console.log(process.env);\r\n\r\n  return (\r\n    <>\r\n      <Tabs\r\n        style={{\r\n          \"--title-font-size\": \"20px\",\r\n          backgroundColor: \"white\",\r\n          boxShadow: \"1px 1px 10px #ddd\",\r\n          zIndex: 1,\r\n        }}\r\n        activeKey={activeKey}\r\n        onChange={(key) => setActiveKey(key as Tab)}\r\n      >\r\n        <Tabs.Tab title=\"推荐\" key={Tab.Recommend}></Tabs.Tab>\r\n        <Tabs.Tab title=\"排行\" key={Tab.Rank}></Tabs.Tab>\r\n      </Tabs>\r\n      <ScrollView\r\n        style={{\r\n          height: \"100%\",\r\n          backgroundColor: \"rgb(245, 245, 245)\",\r\n        }}\r\n      >\r\n        <SearchContext.Provider value={value}>\r\n          <View style={!isShowSearch && { display: \"none\" }}>\r\n            <Search />\r\n          </View>\r\n          <View style={isShowSearch && { display: \"none\" }}>\r\n            {activeKey === Tab.Recommend ? (\r\n              <RecommendPlayList />\r\n            ) : (\r\n              <RankPlayList />\r\n            )}\r\n          </View>\r\n        </SearchContext.Provider>\r\n      </ScrollView>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default observer(Home);\r\n","import { StyleSheet } from 'react-native';\r\n\r\nimport EditScreenInfo from '../components/EditScreenInfo';\r\nimport { Text, View } from '../components/Themed';\r\n\r\nexport default function TabTwoScreen() {\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>Tab Two</Text>\r\n      <View style={styles.separator} lightColor=\"#eee\" darkColor=\"rgba(255,255,255,0.1)\" />\r\n      <EditScreenInfo path=\"/screens/TabTwoScreen.tsx\" />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  title: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n  },\r\n  separator: {\r\n    marginVertical: 30,\r\n    height: 1,\r\n    width: '80%',\r\n  },\r\n});\r\n","import { StyleSheet } from \"react-native\";\r\n\r\nimport EditScreenInfo from \"../components/EditScreenInfo\";\r\nimport { Text, View } from \"../components/Themed\";\r\n\r\nexport default function TabTwoScreen() {\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>Tab Three</Text>\r\n      <View\r\n        style={styles.separator}\r\n        lightColor=\"#eee\"\r\n        darkColor=\"rgba(255,255,255,0.1)\"\r\n      />\r\n      <EditScreenInfo path=\"/screens/TabTwoScreen.tsx\" />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  title: {\r\n    fontSize: 20,\r\n    fontWeight: \"bold\",\r\n  },\r\n  separator: {\r\n    marginVertical: 30,\r\n    height: 1,\r\n    width: \"80%\",\r\n  },\r\n});\r\n","/**\r\n * Learn more about deep linking with React Navigation\r\n * https://reactnavigation.org/docs/deep-linking\r\n * https://reactnavigation.org/docs/configuring-links\r\n */\r\n\r\nimport { LinkingOptions } from \"@react-navigation/native\";\r\nimport * as Linking from \"expo-linking\";\r\n\r\nimport { RootStackParamList } from \"../types\";\r\n\r\nconst linking: LinkingOptions<RootStackParamList> = {\r\n  prefixes: [Linking.makeUrl(\"/\")],\r\n  config: {\r\n    screens: {\r\n      Root: {\r\n        screens: {\r\n          Home: {\r\n            screens: {\r\n              Home: \"home\",\r\n            },\r\n          },\r\n          TabTwo: {\r\n            screens: {\r\n              TabTwoScreen: \"two\",\r\n            },\r\n          },\r\n          TabThree: {\r\n            screens: {\r\n              TabThreeScreen: \"three\",\r\n            },\r\n          },\r\n        },\r\n      },\r\n      Modal: \"modal\",\r\n      NotFound: \"*\",\r\n    },\r\n  },\r\n};\r\n\r\nexport default linking;\r\n","import { useLocalStore } from \"mobx-react\";\r\nimport { View, Text, StyleSheet } from \"react-native\";\r\nimport { Image, Button } from \"antd-mobile\";\r\nimport { songStore } from \"../../store/modules/songList\";\r\nimport { PlayOutline } from \"antd-mobile-icons\";\r\n\r\nexport default function SongPage({ route }: any) {\r\n  const { theSongListInfo: data } = useLocalStore(() => songStore);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.infoBox}>\r\n        <View style={styles.imgBox}>\r\n          <Image src={data.imgUrl} width={165} height={165} />\r\n        </View>\r\n        <Text style={styles.label}>{data.textOne}</Text>\r\n        <Text style={styles.titleDetail}>{data.textTwo}</Text>\r\n        <Text style={[styles.update]}>{data.textThree}</Text>\r\n        <View style={styles.playBtn}>\r\n          <Button color=\"primary\">\r\n            <PlayOutline />\r\n          </Button>\r\n        </View>\r\n      </View>\r\n      <View style={styles.songList}>\r\n        <Text style={styles.listTitle}>{data.textTotal}</Text>\r\n        {data.list.map((item: any, i: number) => (\r\n          <View style={styles.songBox} key={item.id}>\r\n            {data.isRank && <Text style={styles.songIndex}>{i + 1}</Text>}\r\n            <View>\r\n              <Text style={styles.songTitle}>{item.title}</Text>\r\n              <Text style={styles.singerName}>{item.singerName}</Text>\r\n            </View>\r\n          </View>\r\n        ))}\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    backgroundColor: \"white\",\r\n  },\r\n  infoBox: {\r\n    display: \"flex\",\r\n    width: \"100%\",\r\n    justifyContent: \"center\",\r\n    textAlign: \"center\",\r\n    paddingTop: 30,\r\n    paddingBottom: 20,\r\n  },\r\n  imgBox: {\r\n    margin: \"auto\",\r\n    width: 165,\r\n    height: 165,\r\n    borderRadius: 10,\r\n    textShadowColor: \"#ddd\",\r\n    shadowRadius: 10,\r\n    shadowOpacity: 0.8,\r\n    shadowOffset: { width: 1, height: 1 },\r\n    overflow: \"hidden\",\r\n  },\r\n  label: {\r\n    marginTop: 20,\r\n    fontSize: 18,\r\n    lineHeight: 35,\r\n    fontWeight: \"400\",\r\n  },\r\n  titleDetail: {\r\n    lineHeight: 35,\r\n    fontSize: 14,\r\n    fontWeight: \"400\",\r\n  },\r\n  update: {\r\n    lineHeight: 35,\r\n    marginBottom: 10,\r\n    color: \"grey\",\r\n  },\r\n  playBtn: {\r\n    width: 170,\r\n    margin: \"auto\",\r\n    borderRadius: 20,\r\n    overflow: \"hidden\",\r\n  },\r\n  songList: {\r\n    paddingLeft: 20,\r\n    paddingRight: 20,\r\n    marginTop: 10,\r\n  },\r\n  listTitle: {\r\n    fontSize: 12,\r\n    color: \"grey\",\r\n    marginBottom: 15,\r\n  },\r\n  songBox: {\r\n    flexDirection: \"row\",\r\n    marginBottom: 20,\r\n  },\r\n  songIndex: {\r\n    color: \"#f56273\",\r\n    textAlign: \"center\",\r\n    lineHeight: 25,\r\n    marginRight: 10,\r\n  },\r\n  rankValue: {\r\n    color: \"grey\",\r\n    fontSize: 5,\r\n  },\r\n  songTitle: { fontSize: 16 },\r\n  singerName: {\r\n    color: \"rgba(0,0,0,.4)\",\r\n    fontSize: 12,\r\n  },\r\n});\r\n","/**\r\n * If you are not familiar with React Navigation, refer to the \"Fundamentals\" guide:\r\n * https://reactnavigation.org/docs/getting-started\r\n *\r\n */\r\nimport { FontAwesome } from \"@expo/vector-icons\";\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\nimport {\r\n  NavigationContainer,\r\n  DefaultTheme,\r\n  DarkTheme,\r\n} from \"@react-navigation/native\";\r\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\r\nimport * as React from \"react\";\r\nimport { ColorSchemeName, Pressable } from \"react-native\";\r\n\r\nimport Colors from \"../constants/Colors\";\r\nimport useColorScheme from \"../hooks/useColorScheme\";\r\nimport ModalScreen from \"../screens/ModalScreen\";\r\nimport NotFoundScreen from \"../screens/NotFoundScreen\";\r\nimport Home from \"../screens/home/Home\";\r\nimport TabTwoScreen from \"../screens/TabTwoScreen\";\r\nimport TabThreeScreen from \"../screens/TabThreeScreen\";\r\nimport {\r\n  RootStackParamList,\r\n  RootTabParamList,\r\n  RootTabScreenProps,\r\n} from \"../types\";\r\nimport LinkingConfiguration from \"./LinkingConfiguration\";\r\nimport SongPage from \"../screens/song-page/SongPage\";\r\n\r\nexport default function Navigation({\r\n  colorScheme,\r\n}: {\r\n  colorScheme: ColorSchemeName;\r\n}) {\r\n  return (\r\n    <NavigationContainer\r\n      linking={LinkingConfiguration}\r\n      theme={colorScheme === \"dark\" ? DarkTheme : DefaultTheme}\r\n    >\r\n      <RootNavigator />\r\n    </NavigationContainer>\r\n  );\r\n}\r\n\r\n/**\r\n * A root stack navigator is often used for displaying modals on top of all other content.\r\n * https://reactnavigation.org/docs/modal\r\n */\r\nconst Stack = createNativeStackNavigator<RootStackParamList>();\r\n\r\nfunction RootNavigator() {\r\n  return (\r\n    <Stack.Navigator>\r\n      <Stack.Screen\r\n        name=\"Root\"\r\n        component={BottomTabNavigator}\r\n        options={{ headerShown: false }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"NotFound\"\r\n        component={NotFoundScreen}\r\n        options={{ title: \"Oops!\" }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"SongPage\"\r\n        component={SongPage}\r\n        options={{ headerShown: false }}\r\n      />\r\n      <Stack.Group\r\n        screenOptions={{ presentation: \"modal\", headerShown: false }}\r\n      >\r\n        <Stack.Screen name=\"Modal\" component={ModalScreen} />\r\n      </Stack.Group>\r\n    </Stack.Navigator>\r\n  );\r\n}\r\n\r\n/**\r\n * A bottom tab navigator displays tab buttons on the bottom of the display to switch screens.\r\n * https://reactnavigation.org/docs/bottom-tab-navigator\r\n */\r\nconst BottomTab = createBottomTabNavigator<RootTabParamList>();\r\n\r\nfunction BottomTabNavigator() {\r\n  const colorScheme = useColorScheme();\r\n\r\n  return (\r\n    <BottomTab.Navigator\r\n      initialRouteName=\"Home\"\r\n      screenOptions={{\r\n        tabBarActiveTintColor: Colors[colorScheme].tint,\r\n      }}\r\n    >\r\n      <BottomTab.Screen\r\n        name=\"Home\"\r\n        component={Home}\r\n        options={({ navigation }: RootTabScreenProps<\"Home\">) => ({\r\n          title: \"Home\",\r\n          tabBarIcon: ({ color }) => <TabBarIcon name=\"home\" color={color} />,\r\n          headerShown: false,\r\n        })}\r\n      />\r\n      <BottomTab.Screen\r\n        name=\"TabTwo\"\r\n        component={TabTwoScreen}\r\n        options={{\r\n          title: \"Tab Two\",\r\n          tabBarIcon: ({ color }) => <TabBarIcon name=\"code\" color={color} />,\r\n          headerShown: false,\r\n        }}\r\n      />\r\n      <BottomTab.Screen\r\n        name=\"TabThree\"\r\n        component={TabThreeScreen}\r\n        options={{\r\n          title: \"Tab Three\",\r\n          tabBarIcon: ({ color }) => <TabBarIcon name=\"code\" color={color} />,\r\n          headerShown: false,\r\n        }}\r\n      />\r\n    </BottomTab.Navigator>\r\n  );\r\n}\r\n\r\n/**\r\n * You can explore the built-in icon families and icons on the web at https://icons.expo.fyi/\r\n */\r\nfunction TabBarIcon(props: {\r\n  name: React.ComponentProps<typeof FontAwesome>[\"name\"];\r\n  color: string;\r\n}) {\r\n  return <FontAwesome size={30} style={{ marginBottom: -3 }} {...props} />;\r\n}\r\n","import { StatusBar } from \"expo-status-bar\";\r\nimport { SafeAreaProvider } from \"react-native-safe-area-context\";\r\n\r\nimport useCachedResources from \"./hooks/useCachedResources\";\r\nimport useColorScheme from \"./hooks/useColorScheme\";\r\nimport Navigation from \"./navigation\";\r\nimport \"./index.css\";\r\n\r\nexport default function App() {\r\n  const isLoadingComplete = useCachedResources();\r\n  const colorScheme = useColorScheme();\r\n\r\n  if (!isLoadingComplete) {\r\n    return null;\r\n  } else {\r\n    return (\r\n      <SafeAreaProvider>\r\n        <Navigation colorScheme={colorScheme} />\r\n        <StatusBar />\r\n      </SafeAreaProvider>\r\n    );\r\n  }\r\n}\r\n","import { FontAwesome } from '@expo/vector-icons';\r\nimport * as Font from 'expo-font';\r\nimport * as SplashScreen from 'expo-splash-screen';\r\nimport { useEffect, useState } from 'react';\r\n\r\nexport default function useCachedResources() {\r\n  const [isLoadingComplete, setLoadingComplete] = useState(false);\r\n\r\n  // Load any resources or data that we need prior to rendering the app\r\n  useEffect(() => {\r\n    async function loadResourcesAndDataAsync() {\r\n      try {\r\n        SplashScreen.preventAutoHideAsync();\r\n\r\n        // Load fonts\r\n        await Font.loadAsync({\r\n          ...FontAwesome.font,\r\n          'space-mono': require('../assets/fonts/SpaceMono-Regular.ttf'),\r\n        });\r\n      } catch (e) {\r\n        // We might want to provide this error information to an error reporting service\r\n        console.warn(e);\r\n      } finally {\r\n        setLoadingComplete(true);\r\n        SplashScreen.hideAsync();\r\n      }\r\n    }\r\n\r\n    loadResourcesAndDataAsync();\r\n  }, []);\r\n\r\n  return isLoadingComplete;\r\n}\r\n","module.exports = __webpack_public_path__ + \"./fonts/SpaceMono-Regular.ttf\";","var api = require(\"!C:\\\\Users\\\\h'j\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\expo-cli\\\\node_modules\\\\style-loader\\\\dist\\\\runtime\\\\injectStylesIntoStyleTag.js\");\n            var content = require(\"!!C:\\\\Users\\\\h'j\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\expo-cli\\\\node_modules\\\\css-loader\\\\dist\\\\cjs.js!./index.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"C:\\\\Users\\\\h'j\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\expo-cli\\\\node_modules\\\\css-loader\\\\dist\\\\runtime\\\\api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \":root:root {\\r\\n  --adm-color-primary: #22d59c;\\r\\n  color: \\\"#121212\\\";\\r\\n}\\r\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n"],"sourceRoot":""}